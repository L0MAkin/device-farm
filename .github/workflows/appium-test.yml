name: Run Parallel Appium Tests with Video Config Processing

on:
  workflow_dispatch:
    inputs:
      config_data:
        description: 'JSON Config Data'  # Describe your input here
        required: false
        default: ''  # Default value if none provided
  repository_dispatch:
    types: [run-parallel-tests]

jobs:
  run-tests:
    runs-on: [self-hosted, macOS.12.7]

    steps:

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.18.0'  # Use a Node.js version that's compatible with your Appium version

    - name: Install Appium
      run: npm install -g appium@2.2.1
    
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.7'

    - name: Check architecture
      run: echo $(arch)

    - name: Check Python binary architecture
      run: file $(which python)

    - name: Create Python virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate

    - name: Upgrade pip
      run: |
        source venv/bin/activate
        python -m pip install --upgrade pip

    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Create JSON File from CONFIG_DATA
      env:
        CONFIG_DATA: ${{ toJSON(github.event.client_payload.config_data) }}
      run: |
        echo "DEBUG: CONFIG_DATA content:"
        echo "$CONFIG_DATA"
        echo "$CONFIG_DATA" > config_data.json

    - name: Display JSON Config Data
      run: |
        touch config_data.json  # This is just to ensure the file exists for testing
        echo "Current directory: $(pwd)"
        echo "Listing files in current directory:"
        ls -l
        echo "Displaying JSON Config Data:"
        cat config_data.json || echo "File not found or empty"

    - name: Run process_video_config.py with JSON File
      run: |
        source venv/bin/activate
        python process_video_config.py config_data.json

    - name: Run cleanup devices
      run: | 
        source venv/bin/activate
        python #Cleanup_devices.py
    
    - name: Run parallel script
      run: | 
        source venv/bin/activate
        python parallel_test.py

    - name: Github commit and push
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git commit -m "chore: autopublish $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
        git push https://${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}@github.com/L0MAkin/device-farm.git HEAD:main
      env:
        MY_PERSONAL_ACCESS_TOKEN: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
