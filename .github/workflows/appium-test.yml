name: Run Parallel Appium Tests with Video Config Processing

on:
  workflow_dispatch:
    inputs:
      config_data:
        description: 'JSON Config Data'  # Describe your input here
        required: false
        default: ''  # Default value if none provided
  repository_dispatch:
    types: [run-parallel-tests]

jobs:
  run-tests:
    runs-on: self-hosted

    steps:

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.18.0'  # Use a Node.js version that's compatible with your Appium version

    - name: Install Appium
      run: npm install -g appium@2.2.1
    
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.7'

    - name: Check architecture
      run: echo $(arch)

    - name: Check Python binary architecture
      run: file $(which python)

    - name: Create Python virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate

    - name: Upgrade pip
      run: |
        source venv/bin/activate
        python -m pip install --upgrade pip

    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run process_video_config.py
      env:
        CONFIG_DATA: ${{ github.event.inputs.config_data }}
      run: |
        source venv/bin/activate
        python process_video_config.py "$CONFIG_DATA"

    - name: Run parallel tests
      run: | 
        source venv/bin/activate
        python parallel_test.py

    - name: Commit and Push Changes
      run: |
        git config --global user.name 'Your Name'
        git config --global user.email 'your-email@example.com'
        git add .
        git commit -m "Updated device status config files"
        git push
